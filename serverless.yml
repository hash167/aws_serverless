service: serverless-deployment-v9

frameworkVersion: ">=1.1.0 <2.0.0"

custom:
  apigs3:
    dist: web
    topFiles: true

provider:
  name: aws
  runtime: python3.6
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: handlers/create.create
    events:
      - http:
          path: handlers
          method: post
          cors: true

  list:
    handler: handlers/list.list
    events:
      - http:
          path: handlers
          method: get
          cors: true

  get:
    handler: handlers/get.get
    events:
      - http:
          path: handlers/{id}/{location_id}
          method: get
          cors: true


resources:
  Resources:
    handlersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
          -
            AttributeName: location_id
            AttributeType: N
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
          -
            AttributeName: location_id
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

plugins:
  - serverless-apig-s3